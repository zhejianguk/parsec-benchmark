#!/bin/bash
#
# gcc.bldconf - file containing information necessary to build a specific
#               program of the PARSEC benchmark suite with gcc
#
# Copyright (C) 2009 Princeton University
# Written by Christian Bienia

# Compilation and linking options.
# This is the configuration we'll use to build the program. Each package of the
# benchmark suite has such a file with information that will be added to the
# global configuration. All variables set in the global configuration files can
# be referenced here.


# Package dependencies
build_deps=""

# Environment to use for configure script and Makefile
if [ "$PARSEC_TOOLCHAIN" = "riscv" ]; then
    # For RISC-V cross-compilation, we need to set CC and other variables explicitly
    build_env="PATH=\"${CC_HOME}/bin:${PATH}\" CC=\"${CC}\" CXX=\"${CXX}\" AR=\"${AR}\" RANLIB=\"${RANLIB}\" CROSS_COMPILE=\"${BINARY_PREFIX}\""
else
    build_env="PATH=\"${CC_HOME}/bin:${PATH}\""
fi

# Whether the build system supports only in-place compilation.
# If TRUE, then all sources will be copied to the build directory before we
# start building the package. Required for older build systems which don't
# support VPATH.
build_inplace="TRUE"

# Arguments to pass to the configure script, if it exists
if [ "$PARSEC_TOOLCHAIN" = "riscv" ]; then
    # For RISC-V, we use Configure.pl directly instead of config auto-detection
    # The configure script will be replaced with a wrapper
    build_conf="linux-generic64 --cross-compile-prefix=${BINARY_PREFIX} threads no-zlib no-shared"
else
    build_conf="threads no-zlib no-shared"
fi

# Override build targets when cross-compiling for RISC-V to avoid test linking issues
if [ "$PARSEC_TOOLCHAIN" = "riscv" ]; then
    build_targets="build_libs build_apps build_tools"
else
    build_targets=""
fi

